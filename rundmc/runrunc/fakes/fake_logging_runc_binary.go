// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/goci"
	"github.com/cloudfoundry-incubator/guardian/rundmc/runrunc"
)

type FakeLoggingRuncBinary struct {
	WithLogFileStub        func(logFile string) goci.Runc
	withLogFileMutex       sync.RWMutex
	withLogFileArgsForCall []struct {
		logFile string
	}
	withLogFileReturns struct {
		result1 goci.Runc
	}
}

func (fake *FakeLoggingRuncBinary) WithLogFile(logFile string) goci.Runc {
	fake.withLogFileMutex.Lock()
	fake.withLogFileArgsForCall = append(fake.withLogFileArgsForCall, struct {
		logFile string
	}{logFile})
	fake.withLogFileMutex.Unlock()
	if fake.WithLogFileStub != nil {
		return fake.WithLogFileStub(logFile)
	} else {
		return fake.withLogFileReturns.result1
	}
}

func (fake *FakeLoggingRuncBinary) WithLogFileCallCount() int {
	fake.withLogFileMutex.RLock()
	defer fake.withLogFileMutex.RUnlock()
	return len(fake.withLogFileArgsForCall)
}

func (fake *FakeLoggingRuncBinary) WithLogFileArgsForCall(i int) string {
	fake.withLogFileMutex.RLock()
	defer fake.withLogFileMutex.RUnlock()
	return fake.withLogFileArgsForCall[i].logFile
}

func (fake *FakeLoggingRuncBinary) WithLogFileReturns(result1 goci.Runc) {
	fake.WithLogFileStub = nil
	fake.withLogFileReturns = struct {
		result1 goci.Runc
	}{result1}
}

var _ runrunc.LoggingRuncBinary = new(FakeLoggingRuncBinary)
